name: Publish to PyPI

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Upload Release Assets
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs').promises;
            const { repo: { owner, repo }, sha } = context;

            // Get all files in dist directory
            const files = await fs.readdir('./dist');

            // Upload each file
            for (const file of files) {
              const content = await fs.readFile(`./dist/${file}`);
              await github.rest.repos.uploadReleaseAsset({
                owner,
                repo,
                release_id: context.payload.release.id,
                name: file,
                data: content
              });
            }

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine check dist/*
          twine upload dist/*
